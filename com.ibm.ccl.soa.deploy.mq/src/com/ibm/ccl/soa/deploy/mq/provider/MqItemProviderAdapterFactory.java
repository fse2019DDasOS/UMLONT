/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package com.ibm.ccl.soa.deploy.mq.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.ibm.ccl.soa.deploy.mq.util.MqAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MqItemProviderAdapterFactory extends MqAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MqItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MesseageListernerServicePort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MesseageListernerServicePortItemProvider messeageListernerServicePortItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MesseageListernerServicePort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMesseageListernerServicePortAdapter() {
		if (messeageListernerServicePortItemProvider == null) {
			messeageListernerServicePortItemProvider = new MesseageListernerServicePortItemProvider(this);
		}

		return messeageListernerServicePortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQActivationSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQActivationSpecificationItemProvider mqActivationSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQActivationSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQActivationSpecificationAdapter() {
		if (mqActivationSpecificationItemProvider == null) {
			mqActivationSpecificationItemProvider = new MQActivationSpecificationItemProvider(this);
		}

		return mqActivationSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQActivationSpecificationUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQActivationSpecificationUnitItemProvider mqActivationSpecificationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQActivationSpecificationUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQActivationSpecificationUnitAdapter() {
		if (mqActivationSpecificationUnitItemProvider == null) {
			mqActivationSpecificationUnitItemProvider = new MQActivationSpecificationUnitItemProvider(this);
		}

		return mqActivationSpecificationUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQBaseSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQBaseSystemItemProvider mqBaseSystemItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQBaseSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQBaseSystemAdapter() {
		if (mqBaseSystemItemProvider == null) {
			mqBaseSystemItemProvider = new MQBaseSystemItemProvider(this);
		}

		return mqBaseSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQBaseSystemUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQBaseSystemUnitItemProvider mqBaseSystemUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQBaseSystemUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQBaseSystemUnitAdapter() {
		if (mqBaseSystemUnitItemProvider == null) {
			mqBaseSystemUnitItemProvider = new MQBaseSystemUnitItemProvider(this);
		}

		return mqBaseSystemUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQConnectionFactories} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQConnectionFactoriesItemProvider mqConnectionFactoriesItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQConnectionFactories}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQConnectionFactoriesAdapter() {
		if (mqConnectionFactoriesItemProvider == null) {
			mqConnectionFactoriesItemProvider = new MQConnectionFactoriesItemProvider(this);
		}

		return mqConnectionFactoriesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQConnectionFactoriesUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQConnectionFactoriesUnitItemProvider mqConnectionFactoriesUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQConnectionFactoriesUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQConnectionFactoriesUnitAdapter() {
		if (mqConnectionFactoriesUnitItemProvider == null) {
			mqConnectionFactoriesUnitItemProvider = new MQConnectionFactoriesUnitItemProvider(this);
		}

		return mqConnectionFactoriesUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQDestination} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQDestinationItemProvider mqDestinationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQDestination}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQDestinationAdapter() {
		if (mqDestinationItemProvider == null) {
			mqDestinationItemProvider = new MQDestinationItemProvider(this);
		}

		return mqDestinationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQListener} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQListenerItemProvider mqListenerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQListener}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQListenerAdapter() {
		if (mqListenerItemProvider == null) {
			mqListenerItemProvider = new MQListenerItemProvider(this);
		}

		return mqListenerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQListenerUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQListenerUnitItemProvider mqListenerUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQListenerUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQListenerUnitAdapter() {
		if (mqListenerUnitItemProvider == null) {
			mqListenerUnitItemProvider = new MQListenerUnitItemProvider(this);
		}

		return mqListenerUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQMessageListnerServicePortUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQMessageListnerServicePortUnitItemProvider mqMessageListnerServicePortUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQMessageListnerServicePortUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQMessageListnerServicePortUnitAdapter() {
		if (mqMessageListnerServicePortUnitItemProvider == null) {
			mqMessageListnerServicePortUnitItemProvider = new MQMessageListnerServicePortUnitItemProvider(this);
		}

		return mqMessageListnerServicePortUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQMessagingProvider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQMessagingProviderItemProvider mqMessagingProviderItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQMessagingProvider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQMessagingProviderAdapter() {
		if (mqMessagingProviderItemProvider == null) {
			mqMessagingProviderItemProvider = new MQMessagingProviderItemProvider(this);
		}

		return mqMessagingProviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQMessagingProviderUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQMessagingProviderUnitItemProvider mqMessagingProviderUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQMessagingProviderUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQMessagingProviderUnitAdapter() {
		if (mqMessagingProviderUnitItemProvider == null) {
			mqMessagingProviderUnitItemProvider = new MQMessagingProviderUnitItemProvider(this);
		}

		return mqMessagingProviderUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueItemProvider mqQueueItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueAdapter() {
		if (mqQueueItemProvider == null) {
			mqQueueItemProvider = new MQQueueItemProvider(this);
		}

		return mqQueueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueChannel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueChannelItemProvider mqQueueChannelItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueChannel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueChannelAdapter() {
		if (mqQueueChannelItemProvider == null) {
			mqQueueChannelItemProvider = new MQQueueChannelItemProvider(this);
		}

		return mqQueueChannelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueChannelUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueChannelUnitItemProvider mqQueueChannelUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueChannelUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueChannelUnitAdapter() {
		if (mqQueueChannelUnitItemProvider == null) {
			mqQueueChannelUnitItemProvider = new MQQueueChannelUnitItemProvider(this);
		}

		return mqQueueChannelUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueConnectionFactory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueConnectionFactoryItemProvider mqQueueConnectionFactoryItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueConnectionFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueConnectionFactoryAdapter() {
		if (mqQueueConnectionFactoryItemProvider == null) {
			mqQueueConnectionFactoryItemProvider = new MQQueueConnectionFactoryItemProvider(this);
		}

		return mqQueueConnectionFactoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueConnectionFactoryUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueConnectionFactoryUnitItemProvider mqQueueConnectionFactoryUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueConnectionFactoryUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueConnectionFactoryUnitAdapter() {
		if (mqQueueConnectionFactoryUnitItemProvider == null) {
			mqQueueConnectionFactoryUnitItemProvider = new MQQueueConnectionFactoryUnitItemProvider(this);
		}

		return mqQueueConnectionFactoryUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueDestination} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueDestinationItemProvider mqQueueDestinationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueDestination}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueDestinationAdapter() {
		if (mqQueueDestinationItemProvider == null) {
			mqQueueDestinationItemProvider = new MQQueueDestinationItemProvider(this);
		}

		return mqQueueDestinationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueDestinationUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueDestinationUnitItemProvider mqQueueDestinationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueDestinationUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueDestinationUnitAdapter() {
		if (mqQueueDestinationUnitItemProvider == null) {
			mqQueueDestinationUnitItemProvider = new MQQueueDestinationUnitItemProvider(this);
		}

		return mqQueueDestinationUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueManagerItemProvider mqQueueManagerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueManagerAdapter() {
		if (mqQueueManagerItemProvider == null) {
			mqQueueManagerItemProvider = new MQQueueManagerItemProvider(this);
		}

		return mqQueueManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueManagerUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueManagerUnitItemProvider mqQueueManagerUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueManagerUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueManagerUnitAdapter() {
		if (mqQueueManagerUnitItemProvider == null) {
			mqQueueManagerUnitItemProvider = new MQQueueManagerUnitItemProvider(this);
		}

		return mqQueueManagerUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQQueueUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQQueueUnitItemProvider mqQueueUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQQueueUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQQueueUnitAdapter() {
		if (mqQueueUnitItemProvider == null) {
			mqQueueUnitItemProvider = new MQQueueUnitItemProvider(this);
		}

		return mqQueueUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQRootItemProvider mqRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQRootAdapter() {
		if (mqRootItemProvider == null) {
			mqRootItemProvider = new MQRootItemProvider(this);
		}

		return mqRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQTopicConnectionFactory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQTopicConnectionFactoryItemProvider mqTopicConnectionFactoryItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQTopicConnectionFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQTopicConnectionFactoryAdapter() {
		if (mqTopicConnectionFactoryItemProvider == null) {
			mqTopicConnectionFactoryItemProvider = new MQTopicConnectionFactoryItemProvider(this);
		}

		return mqTopicConnectionFactoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQTopicConnectionFactoryUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQTopicConnectionFactoryUnitItemProvider mqTopicConnectionFactoryUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQTopicConnectionFactoryUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQTopicConnectionFactoryUnitAdapter() {
		if (mqTopicConnectionFactoryUnitItemProvider == null) {
			mqTopicConnectionFactoryUnitItemProvider = new MQTopicConnectionFactoryUnitItemProvider(this);
		}

		return mqTopicConnectionFactoryUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQTopicDestination} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQTopicDestinationItemProvider mqTopicDestinationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQTopicDestination}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQTopicDestinationAdapter() {
		if (mqTopicDestinationItemProvider == null) {
			mqTopicDestinationItemProvider = new MQTopicDestinationItemProvider(this);
		}

		return mqTopicDestinationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.mq.MQTopicDestinationUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQTopicDestinationUnitItemProvider mqTopicDestinationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.mq.MQTopicDestinationUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMQTopicDestinationUnitAdapter() {
		if (mqTopicDestinationUnitItemProvider == null) {
			mqTopicDestinationUnitItemProvider = new MQTopicDestinationUnitItemProvider(this);
		}

		return mqTopicDestinationUnitItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (messeageListernerServicePortItemProvider != null) messeageListernerServicePortItemProvider.dispose();
		if (mqActivationSpecificationItemProvider != null) mqActivationSpecificationItemProvider.dispose();
		if (mqActivationSpecificationUnitItemProvider != null) mqActivationSpecificationUnitItemProvider.dispose();
		if (mqBaseSystemItemProvider != null) mqBaseSystemItemProvider.dispose();
		if (mqBaseSystemUnitItemProvider != null) mqBaseSystemUnitItemProvider.dispose();
		if (mqConnectionFactoriesItemProvider != null) mqConnectionFactoriesItemProvider.dispose();
		if (mqConnectionFactoriesUnitItemProvider != null) mqConnectionFactoriesUnitItemProvider.dispose();
		if (mqDestinationItemProvider != null) mqDestinationItemProvider.dispose();
		if (mqListenerItemProvider != null) mqListenerItemProvider.dispose();
		if (mqListenerUnitItemProvider != null) mqListenerUnitItemProvider.dispose();
		if (mqMessageListnerServicePortUnitItemProvider != null) mqMessageListnerServicePortUnitItemProvider.dispose();
		if (mqMessagingProviderItemProvider != null) mqMessagingProviderItemProvider.dispose();
		if (mqMessagingProviderUnitItemProvider != null) mqMessagingProviderUnitItemProvider.dispose();
		if (mqQueueItemProvider != null) mqQueueItemProvider.dispose();
		if (mqQueueChannelItemProvider != null) mqQueueChannelItemProvider.dispose();
		if (mqQueueChannelUnitItemProvider != null) mqQueueChannelUnitItemProvider.dispose();
		if (mqQueueConnectionFactoryItemProvider != null) mqQueueConnectionFactoryItemProvider.dispose();
		if (mqQueueConnectionFactoryUnitItemProvider != null) mqQueueConnectionFactoryUnitItemProvider.dispose();
		if (mqQueueDestinationItemProvider != null) mqQueueDestinationItemProvider.dispose();
		if (mqQueueDestinationUnitItemProvider != null) mqQueueDestinationUnitItemProvider.dispose();
		if (mqQueueManagerItemProvider != null) mqQueueManagerItemProvider.dispose();
		if (mqQueueManagerUnitItemProvider != null) mqQueueManagerUnitItemProvider.dispose();
		if (mqQueueUnitItemProvider != null) mqQueueUnitItemProvider.dispose();
		if (mqRootItemProvider != null) mqRootItemProvider.dispose();
		if (mqTopicConnectionFactoryItemProvider != null) mqTopicConnectionFactoryItemProvider.dispose();
		if (mqTopicConnectionFactoryUnitItemProvider != null) mqTopicConnectionFactoryUnitItemProvider.dispose();
		if (mqTopicDestinationItemProvider != null) mqTopicDestinationItemProvider.dispose();
		if (mqTopicDestinationUnitItemProvider != null) mqTopicDestinationUnitItemProvider.dispose();
	}

}
