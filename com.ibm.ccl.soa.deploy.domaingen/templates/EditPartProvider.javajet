<%@ jet package="templateclasses" imports="java.util.*" class="EditPartProviderTemplate" %>
<% List args=(List) argument; %>
<% String modelPackage=(String)args.get(0); %>
<% String ucModelPackagePrefix=(String)args.get(1); %>
<% String editPartProviderPackage=(String)args.get(2); %>
<% String unitEditPartPackage=(String)args.get(3); %>
/*******************************************************************************
 * Copyright (c) 2003, 2007 IBM Corporation Licensed Material - Property of IBM. All rights reserved.
 *  
 * US Government Users Restricted Rights - Use, duplication or disclosure v1.0 restricted by GSA ADP
 * Schedule Contract with IBM Corp.
 * 
 * Contributors: IBM Corporation - initial API and implementation
 *******************************************************************************/

package <%=editPartProviderPackage%>;

import java.util.HashMap;
import java.util.Map;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.gmf.runtime.diagram.ui.services.editpart.AbstractEditPartProvider;
import org.eclipse.gmf.runtime.notation.View;

import <%=modelPackage%>.<%=ucModelPackagePrefix%>Package;
import <%=unitEditPartPackage%>.*;


/**
 * Deploy tool Edit Part provider for <%=ucModelPackagePrefix%> domain.
 * 
 */
public class <%=ucModelPackagePrefix%>EditPartProvider extends AbstractEditPartProvider {

	/** list of supported shape editparts. */
	private Map<EClass, Class<?>> nodeMap = new HashMap<EClass, Class<?>>();
	{
<% for (int i=4; i<args.size(); ++i) { %>
		nodeMap.put(<%=ucModelPackagePrefix%>Package.eINSTANCE.get<%=args.get(i)%>Unit(), <%=args.get(i)%>UnitEditPart.class);
<% } %>
	}

	/**
	 * Gets a Node's editpart class.
	 */
	@Override
	protected Class<?> getNodeEditPartClass(View view) {
		Class<?> clazz = null;
		EClass eClass = getReferencedElementEClass(view);
		if (eClass != null) {
			clazz = ((Class<?>) nodeMap.get(eClass));
		}

		return clazz;
	}
}
