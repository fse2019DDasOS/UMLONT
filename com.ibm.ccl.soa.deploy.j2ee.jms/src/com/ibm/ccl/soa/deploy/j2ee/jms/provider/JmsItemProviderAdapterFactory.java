/*******************************************************************************
 * Copyright (c) 2003, 2007 IBM Corporation Licensed Material - Property of IBM. All rights reserved.
 *  
 * US Government Users Restricted Rights - Use, duplication or disclosure v1.0 restricted by GSA ADP
 * Schedule Contract with IBM Corp.
 * 
 * Contributors: IBM Corporation - initial API and implementation
 *******************************************************************************/
package com.ibm.ccl.soa.deploy.j2ee.jms.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.ibm.ccl.soa.deploy.j2ee.jms.util.JmsAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * @generated
 */
public class JmsItemProviderAdapterFactory extends JmsAdapterFactory implements
		ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public static final String copyright = "Copyright (c) 2005, 2006 IBM Corporation. Licensed Material - Property of IBM. All rights reserved."; //$NON-NLS-1$

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public JmsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSActivationSpecification} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected JMSActivationSpecificationItemProvider jmsActivationSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSActivationSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSActivationSpecificationAdapter() {
		if (jmsActivationSpecificationItemProvider == null) {
			jmsActivationSpecificationItemProvider = new JMSActivationSpecificationItemProvider(this);
		}

		return jmsActivationSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSActivationSpecificationUnit} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected JMSActivationSpecificationUnitItemProvider jmsActivationSpecificationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSActivationSpecificationUnit}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSActivationSpecificationUnitAdapter() {
		if (jmsActivationSpecificationUnitItemProvider == null) {
			jmsActivationSpecificationUnitItemProvider = new JMSActivationSpecificationUnitItemProvider(this);
		}

		return jmsActivationSpecificationUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSConnectionFactory} instances.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	protected JMSConnectionFactoryItemProvider jmsConnectionFactoryItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSConnectionFactory}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSConnectionFactoryAdapter() {
		if (jmsConnectionFactoryItemProvider == null) {
			jmsConnectionFactoryItemProvider = new JMSConnectionFactoryItemProvider(this);
		}

		return jmsConnectionFactoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSConnectionFactoryUnit} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected JMSConnectionFactoryUnitItemProvider jmsConnectionFactoryUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSConnectionFactoryUnit}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSConnectionFactoryUnitAdapter() {
		if (jmsConnectionFactoryUnitItemProvider == null) {
			jmsConnectionFactoryUnitItemProvider = new JMSConnectionFactoryUnitItemProvider(this);
		}

		return jmsConnectionFactoryUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSDeployRoot} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected JMSDeployRootItemProvider jmsDeployRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSDeployRoot}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createJMSDeployRootAdapter() {
		if (jmsDeployRootItemProvider == null) {
			jmsDeployRootItemProvider = new JMSDeployRootItemProvider(this);
		}

		return jmsDeployRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSDestination} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected JMSDestinationItemProvider jmsDestinationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSDestination}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createJMSDestinationAdapter() {
		if (jmsDestinationItemProvider == null) {
			jmsDestinationItemProvider = new JMSDestinationItemProvider(this);
		}

		return jmsDestinationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSProvider} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected JMSProviderItemProvider jmsProviderItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSProvider}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createJMSProviderAdapter() {
		if (jmsProviderItemProvider == null) {
			jmsProviderItemProvider = new JMSProviderItemProvider(this);
		}

		return jmsProviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSProviderUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JMSProviderUnitItemProvider jmsProviderUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSProviderUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createJMSProviderUnitAdapter() {
		if (jmsProviderUnitItemProvider == null) {
			jmsProviderUnitItemProvider = new JMSProviderUnitItemProvider(this);
		}

		return jmsProviderUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueConnectionFactory} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected JMSQueueConnectionFactoryItemProvider jmsQueueConnectionFactoryItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueConnectionFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSQueueConnectionFactoryAdapter() {
		if (jmsQueueConnectionFactoryItemProvider == null) {
			jmsQueueConnectionFactoryItemProvider = new JMSQueueConnectionFactoryItemProvider(this);
		}

		return jmsQueueConnectionFactoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueConnectionFactoryUnit} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected JMSQueueConnectionFactoryUnitItemProvider jmsQueueConnectionFactoryUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueConnectionFactoryUnit}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSQueueConnectionFactoryUnitAdapter() {
		if (jmsQueueConnectionFactoryUnitItemProvider == null) {
			jmsQueueConnectionFactoryUnitItemProvider = new JMSQueueConnectionFactoryUnitItemProvider(this);
		}

		return jmsQueueConnectionFactoryUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueDestination} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JMSQueueDestinationItemProvider jmsQueueDestinationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueDestination}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSQueueDestinationAdapter() {
		if (jmsQueueDestinationItemProvider == null) {
			jmsQueueDestinationItemProvider = new JMSQueueDestinationItemProvider(this);
		}

		return jmsQueueDestinationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueDestinationUnit} instances.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	protected JMSQueueDestinationUnitItemProvider jmsQueueDestinationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSQueueDestinationUnit}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSQueueDestinationUnitAdapter() {
		if (jmsQueueDestinationUnitItemProvider == null) {
			jmsQueueDestinationUnitItemProvider = new JMSQueueDestinationUnitItemProvider(this);
		}

		return jmsQueueDestinationUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicConnectionFactory} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected JMSTopicConnectionFactoryItemProvider jmsTopicConnectionFactoryItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicConnectionFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSTopicConnectionFactoryAdapter() {
		if (jmsTopicConnectionFactoryItemProvider == null) {
			jmsTopicConnectionFactoryItemProvider = new JMSTopicConnectionFactoryItemProvider(this);
		}

		return jmsTopicConnectionFactoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicConnectionFactoryUnit} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected JMSTopicConnectionFactoryUnitItemProvider jmsTopicConnectionFactoryUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicConnectionFactoryUnit}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSTopicConnectionFactoryUnitAdapter() {
		if (jmsTopicConnectionFactoryUnitItemProvider == null) {
			jmsTopicConnectionFactoryUnitItemProvider = new JMSTopicConnectionFactoryUnitItemProvider(this);
		}

		return jmsTopicConnectionFactoryUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicDestination} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JMSTopicDestinationItemProvider jmsTopicDestinationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicDestination}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSTopicDestinationAdapter() {
		if (jmsTopicDestinationItemProvider == null) {
			jmsTopicDestinationItemProvider = new JMSTopicDestinationItemProvider(this);
		}

		return jmsTopicDestinationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicDestinationUnit} instances.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	protected JMSTopicDestinationUnitItemProvider jmsTopicDestinationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.j2ee.jms.JMSTopicDestinationUnit}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createJMSTopicDestinationUnitAdapter() {
		if (jmsTopicDestinationUnitItemProvider == null) {
			jmsTopicDestinationUnitItemProvider = new JMSTopicDestinationUnitItemProvider(this);
		}

		return jmsTopicDestinationUnitItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (jmsActivationSpecificationItemProvider != null) jmsActivationSpecificationItemProvider.dispose();
		if (jmsActivationSpecificationUnitItemProvider != null) jmsActivationSpecificationUnitItemProvider.dispose();
		if (jmsConnectionFactoryItemProvider != null) jmsConnectionFactoryItemProvider.dispose();
		if (jmsConnectionFactoryUnitItemProvider != null) jmsConnectionFactoryUnitItemProvider.dispose();
		if (jmsDeployRootItemProvider != null) jmsDeployRootItemProvider.dispose();
		if (jmsDestinationItemProvider != null) jmsDestinationItemProvider.dispose();
		if (jmsProviderItemProvider != null) jmsProviderItemProvider.dispose();
		if (jmsProviderUnitItemProvider != null) jmsProviderUnitItemProvider.dispose();
		if (jmsQueueConnectionFactoryItemProvider != null) jmsQueueConnectionFactoryItemProvider.dispose();
		if (jmsQueueConnectionFactoryUnitItemProvider != null) jmsQueueConnectionFactoryUnitItemProvider.dispose();
		if (jmsQueueDestinationItemProvider != null) jmsQueueDestinationItemProvider.dispose();
		if (jmsQueueDestinationUnitItemProvider != null) jmsQueueDestinationUnitItemProvider.dispose();
		if (jmsTopicConnectionFactoryItemProvider != null) jmsTopicConnectionFactoryItemProvider.dispose();
		if (jmsTopicConnectionFactoryUnitItemProvider != null) jmsTopicConnectionFactoryUnitItemProvider.dispose();
		if (jmsTopicDestinationItemProvider != null) jmsTopicDestinationItemProvider.dispose();
		if (jmsTopicDestinationUnitItemProvider != null) jmsTopicDestinationUnitItemProvider.dispose();
	}

}
