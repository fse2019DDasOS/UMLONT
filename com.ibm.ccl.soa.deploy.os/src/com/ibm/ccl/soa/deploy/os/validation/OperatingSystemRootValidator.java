/**
 * <copyright>
 * </copyright>
 *
 * $Id: OperatingSystemRootValidator.java,v 1.4 2007/12/19 23:37:05 barnold Exp $
 */
package com.ibm.ccl.soa.deploy.os.validation;

import java.util.Map;

import org.eclipse.emf.ecore.util.FeatureMap;

import com.ibm.ccl.soa.deploy.os.AIXLocalGroup;
import com.ibm.ccl.soa.deploy.os.AIXLocalGroupUnit;
import com.ibm.ccl.soa.deploy.os.AIXLocalService;
import com.ibm.ccl.soa.deploy.os.AIXLocalServiceUnit;
import com.ibm.ccl.soa.deploy.os.AIXLocalUser;
import com.ibm.ccl.soa.deploy.os.AIXLocalUserUnit;
import com.ibm.ccl.soa.deploy.os.AIXOperatingSystem;
import com.ibm.ccl.soa.deploy.os.AIXOperatingSystemUnit;
import com.ibm.ccl.soa.deploy.os.DataFile;
import com.ibm.ccl.soa.deploy.os.DataFileUnit;
import com.ibm.ccl.soa.deploy.os.Directory;
import com.ibm.ccl.soa.deploy.os.DirectoryUnit;
import com.ibm.ccl.soa.deploy.os.FileSystem;
import com.ibm.ccl.soa.deploy.os.FileSystemContent;
import com.ibm.ccl.soa.deploy.os.FileSystemContentUnit;
import com.ibm.ccl.soa.deploy.os.FileSystemUnit;
import com.ibm.ccl.soa.deploy.os.LinuxLocalGroup;
import com.ibm.ccl.soa.deploy.os.LinuxLocalGroupUnit;
import com.ibm.ccl.soa.deploy.os.LinuxLocalService;
import com.ibm.ccl.soa.deploy.os.LinuxLocalServiceUnit;
import com.ibm.ccl.soa.deploy.os.LinuxLocalUser;
import com.ibm.ccl.soa.deploy.os.LinuxLocalUserUnit;
import com.ibm.ccl.soa.deploy.os.LinuxOperatingSystem;
import com.ibm.ccl.soa.deploy.os.LinuxOperatingSystemUnit;
import com.ibm.ccl.soa.deploy.os.LocalFileSystem;
import com.ibm.ccl.soa.deploy.os.LocalFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.NFSFileSystem;
import com.ibm.ccl.soa.deploy.os.NFSFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.OpenVmsFileSystem;
import com.ibm.ccl.soa.deploy.os.OpenVmsFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.OperatingSystem;
import com.ibm.ccl.soa.deploy.os.OperatingSystemUnit;
import com.ibm.ccl.soa.deploy.os.Port;
import com.ibm.ccl.soa.deploy.os.PortConfigUnit;
import com.ibm.ccl.soa.deploy.os.PortConsumer;
import com.ibm.ccl.soa.deploy.os.RedhatLinuxLocalGroup;
import com.ibm.ccl.soa.deploy.os.RedhatLinuxLocalService;
import com.ibm.ccl.soa.deploy.os.RedhatLinuxLocalUser;
import com.ibm.ccl.soa.deploy.os.RedhatLinuxOperatingSystem;
import com.ibm.ccl.soa.deploy.os.RemoteFileSystem;
import com.ibm.ccl.soa.deploy.os.RemoteFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.SMBFileSystem;
import com.ibm.ccl.soa.deploy.os.SMBFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.SUSELinuxLocalGroup;
import com.ibm.ccl.soa.deploy.os.SUSELinuxLocalService;
import com.ibm.ccl.soa.deploy.os.SUSELinuxLocalUser;
import com.ibm.ccl.soa.deploy.os.SUSELinuxOperatingSystem;
import com.ibm.ccl.soa.deploy.os.SolarisFileSystem;
import com.ibm.ccl.soa.deploy.os.SolarisFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.UnixDirectory;
import com.ibm.ccl.soa.deploy.os.UnixFileSystem;
import com.ibm.ccl.soa.deploy.os.UnixFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.User;
import com.ibm.ccl.soa.deploy.os.UserGroup;
import com.ibm.ccl.soa.deploy.os.UserGroupUnit;
import com.ibm.ccl.soa.deploy.os.UserUnit;
import com.ibm.ccl.soa.deploy.os.WindowsDirectory;
import com.ibm.ccl.soa.deploy.os.WindowsFileSystem;
import com.ibm.ccl.soa.deploy.os.WindowsFileSystemUnit;
import com.ibm.ccl.soa.deploy.os.WindowsLocalGroup;
import com.ibm.ccl.soa.deploy.os.WindowsLocalGroupUnit;
import com.ibm.ccl.soa.deploy.os.WindowsLocalService;
import com.ibm.ccl.soa.deploy.os.WindowsLocalServiceUnit;
import com.ibm.ccl.soa.deploy.os.WindowsLocalUser;
import com.ibm.ccl.soa.deploy.os.WindowsLocalUserUnit;
import com.ibm.ccl.soa.deploy.os.WindowsOperatingSystem;
import com.ibm.ccl.soa.deploy.os.WindowsOperatingSystemUnit;

/**
 * A sample validator interface for {@link com.ibm.ccl.soa.deploy.os.OperatingSystemRoot}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface OperatingSystemRootValidator {
	boolean validate();

	boolean validateMixed(FeatureMap value);

	boolean validateXMLNSPrefixMap(Map value);

	boolean validateXSISchemaLocation(Map value);

	boolean validateCapabilityAixLocalGroup(AIXLocalGroup value);

	boolean validateCapabilityAixLocalService(AIXLocalService value);

	boolean validateCapabilityAixLocalUser(AIXLocalUser value);

	boolean validateCapabilityAixOperatingSystem(AIXOperatingSystem value);

	boolean validateCapabilityDataFile(DataFile value);

	boolean validateCapabilityDirectory(Directory value);

	boolean validateCapabilityFileSystem(FileSystem value);

	boolean validateCapabilityFileSystemContent(FileSystemContent value);

	boolean validateCapabilityLinuxLocalGroup(LinuxLocalGroup value);

	boolean validateCapabilityLinuxLocalService(LinuxLocalService value);

	boolean validateCapabilityLinuxLocalUser(LinuxLocalUser value);

	boolean validateCapabilityLinuxOperatingSystem(LinuxOperatingSystem value);

	boolean validateCapabilityLocalFileSystem(LocalFileSystem value);

	boolean validateCapabilityNFSFileSystem(NFSFileSystem value);

	boolean validateCapabilityOpenVmsFileSystem(OpenVmsFileSystem value);

	boolean validateCapabilityOperatingSystem(OperatingSystem value);

	boolean validateCapabilityPort(Port value);

	boolean validateCapabilityPortConsumer(PortConsumer value);

	boolean validateCapabilityRedhatLinuxLocalGroup(RedhatLinuxLocalGroup value);

	boolean validateCapabilityRedhatLinuxLocalService(RedhatLinuxLocalService value);

	boolean validateCapabilityRedhatLinuxLocalUser(RedhatLinuxLocalUser value);

	boolean validateCapabilityRedhatLinuxOperatingSystem(RedhatLinuxOperatingSystem value);

	boolean validateCapabilityRemoteFileSystem(RemoteFileSystem value);

	boolean validateCapabilitySMBFileSystem(SMBFileSystem value);

	boolean validateCapabilitySolarisFileSystem(SolarisFileSystem value);

	boolean validateCapabilitySuseLinuxLocalGroup(SUSELinuxLocalGroup value);

	boolean validateCapabilitySuseLinuxLocalService(SUSELinuxLocalService value);

	boolean validateCapabilitySuseLinuxLocalUser(SUSELinuxLocalUser value);

	boolean validateCapabilitySuseLinuxOperatingSystem(SUSELinuxOperatingSystem value);

	boolean validateCapabilityUnixDirectory(UnixDirectory value);

	boolean validateCapabilityUnixFileSystem(UnixFileSystem value);

	boolean validateCapabilityUser(User value);

	boolean validateCapabilityUserGroup(UserGroup value);

	boolean validateCapabilityWindowsDirectory(WindowsDirectory value);

	boolean validateCapabilityWindowsFileSystem(WindowsFileSystem value);

	boolean validateCapabilityWindowsLocalGroup(WindowsLocalGroup value);

	boolean validateCapabilityWindowsLocalService(WindowsLocalService value);

	boolean validateCapabilityWindowsLocalUser(WindowsLocalUser value);

	boolean validateCapabilityWindowsOperatingSystem(WindowsOperatingSystem value);

	boolean validateUnitAixLocalGroup(AIXLocalGroupUnit value);

	boolean validateUnitAixLocalServiceUnit(AIXLocalServiceUnit value);

	boolean validateUnitAixLocalUser(AIXLocalUserUnit value);

	boolean validateUnitAixOperatingSystemUnit(AIXOperatingSystemUnit value);

	boolean validateUnitDataFileUnit(DataFileUnit value);

	boolean validateUnitDirectoryUnit(DirectoryUnit value);

	boolean validateUnitFileSystemContentUnit(FileSystemContentUnit value);

	boolean validateUnitFileSystemUnit(FileSystemUnit value);

	boolean validateUnitLinuxLocalGroup(LinuxLocalGroupUnit value);

	boolean validateUnitLinuxLocalServiceUnit(LinuxLocalServiceUnit value);

	boolean validateUnitLinuxLocalUser(LinuxLocalUserUnit value);

	boolean validateUnitLinuxOperatingSystemUnit(LinuxOperatingSystemUnit value);

	boolean validateUnitLocalFileSystemUnit(LocalFileSystemUnit value);

	boolean validateUnitNFSFileSystemUnit(NFSFileSystemUnit value);

	boolean validateUnitOpenVmsFileSystemUnit(OpenVmsFileSystemUnit value);

	boolean validateUnitOperatingSystemUnit(OperatingSystemUnit value);

	boolean validateUnitPortConfigUnit(PortConfigUnit value);

	boolean validateUnitRemoteFileSystemUnit(RemoteFileSystemUnit value);

	boolean validateUnitSMBFileSystemUnit(SMBFileSystemUnit value);

	boolean validateUnitSolarisFileSystemUnit(SolarisFileSystemUnit value);

	boolean validateUnitUnixFileSystemUnit(UnixFileSystemUnit value);

	boolean validateUnitUser(UserUnit value);

	boolean validateUnitUserGroup(UserGroupUnit value);

	boolean validateUnitWindowsFileSystemUnit(WindowsFileSystemUnit value);

	boolean validateUnitWindowsLocalGroup(WindowsLocalGroupUnit value);

	boolean validateUnitWindowsLocalServiceUnit(WindowsLocalServiceUnit value);

	boolean validateUnitWindowsLocalUser(WindowsLocalUserUnit value);

	boolean validateUnitWindowsOperatingSystemUnit(WindowsOperatingSystemUnit value);
}
