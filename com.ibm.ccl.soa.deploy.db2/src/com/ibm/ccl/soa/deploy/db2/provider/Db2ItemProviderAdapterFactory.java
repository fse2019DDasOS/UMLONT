/*******************************************************************************
 * Copyright (c) 2003, 2007 IBM Corporation Licensed Material - Property of IBM. All rights reserved.
 *  
 * US Government Users Restricted Rights - Use, duplication or disclosure v1.0 restricted by GSA ADP
 * Schedule Contract with IBM Corp.
 * 
 * Contributors: IBM Corporation - initial API and implementation
 *******************************************************************************/
package com.ibm.ccl.soa.deploy.db2.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.ibm.ccl.soa.deploy.db2.util.Db2AdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * @generated
 */
public class Db2ItemProviderAdapterFactory extends Db2AdapterFactory implements
		ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Db2ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2AdminClient} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2AdminClientItemProvider db2AdminClientItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2AdminClient}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2AdminClientAdapter() {
		if (db2AdminClientItemProvider == null) {
			db2AdminClientItemProvider = new DB2AdminClientItemProvider(this);
		}

		return db2AdminClientItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2AdminClientUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2AdminClientUnitItemProvider db2AdminClientUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2AdminClientUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2AdminClientUnitAdapter() {
		if (db2AdminClientUnitItemProvider == null) {
			db2AdminClientUnitItemProvider = new DB2AdminClientUnitItemProvider(this);
		}

		return db2AdminClientUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2AdminServer} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2AdminServerItemProvider db2AdminServerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2AdminServer}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2AdminServerAdapter() {
		if (db2AdminServerItemProvider == null) {
			db2AdminServerItemProvider = new DB2AdminServerItemProvider(this);
		}

		return db2AdminServerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2AdminServerUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2AdminServerUnitItemProvider db2AdminServerUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2AdminServerUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2AdminServerUnitAdapter() {
		if (db2AdminServerUnitItemProvider == null) {
			db2AdminServerUnitItemProvider = new DB2AdminServerUnitItemProvider(this);
		}

		return db2AdminServerUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2AppDevelClient} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2AppDevelClientItemProvider db2AppDevelClientItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2AppDevelClient}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2AppDevelClientAdapter() {
		if (db2AppDevelClientItemProvider == null) {
			db2AppDevelClientItemProvider = new DB2AppDevelClientItemProvider(this);
		}

		return db2AppDevelClientItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2AppDevelClientUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DB2AppDevelClientUnitItemProvider db2AppDevelClientUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2AppDevelClientUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2AppDevelClientUnitAdapter() {
		if (db2AppDevelClientUnitItemProvider == null) {
			db2AppDevelClientUnitItemProvider = new DB2AppDevelClientUnitItemProvider(this);
		}

		return db2AppDevelClientUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2BaseClientUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2BaseClientUnitItemProvider db2BaseClientUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2BaseClientUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2BaseClientUnitAdapter() {
		if (db2BaseClientUnitItemProvider == null) {
			db2BaseClientUnitItemProvider = new DB2BaseClientUnitItemProvider(this);
		}

		return db2BaseClientUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2BaseInstance} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2BaseInstanceItemProvider db2BaseInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2BaseInstance}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2BaseInstanceAdapter() {
		if (db2BaseInstanceItemProvider == null) {
			db2BaseInstanceItemProvider = new DB2BaseInstanceItemProvider(this);
		}

		return db2BaseInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2CatalogedNode} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2CatalogedNodeItemProvider db2CatalogedNodeItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2CatalogedNode}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2CatalogedNodeAdapter() {
		if (db2CatalogedNodeItemProvider == null) {
			db2CatalogedNodeItemProvider = new DB2CatalogedNodeItemProvider(this);
		}

		return db2CatalogedNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2CatalogUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2CatalogUnitItemProvider db2CatalogUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2CatalogUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2CatalogUnitAdapter() {
		if (db2CatalogUnitItemProvider == null) {
			db2CatalogUnitItemProvider = new DB2CatalogUnitItemProvider(this);
		}

		return db2CatalogUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2Client} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected DB2ClientItemProvider db2ClientItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2Client}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2ClientAdapter() {
		if (db2ClientItemProvider == null) {
			db2ClientItemProvider = new DB2ClientItemProvider(this);
		}

		return db2ClientItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2ClientInstance} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2ClientInstanceItemProvider db2ClientInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2ClientInstance}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2ClientInstanceAdapter() {
		if (db2ClientInstanceItemProvider == null) {
			db2ClientInstanceItemProvider = new DB2ClientInstanceItemProvider(this);
		}

		return db2ClientInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2ClientInstanceUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DB2ClientInstanceUnitItemProvider db2ClientInstanceUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2ClientInstanceUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2ClientInstanceUnitAdapter() {
		if (db2ClientInstanceUnitItemProvider == null) {
			db2ClientInstanceUnitItemProvider = new DB2ClientInstanceUnitItemProvider(this);
		}

		return db2ClientInstanceUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2Database} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2DatabaseItemProvider db2DatabaseItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2Database}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2DatabaseAdapter() {
		if (db2DatabaseItemProvider == null) {
			db2DatabaseItemProvider = new DB2DatabaseItemProvider(this);
		}

		return db2DatabaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2DatabaseUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2DatabaseUnitItemProvider db2DatabaseUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2DatabaseUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2DatabaseUnitAdapter() {
		if (db2DatabaseUnitItemProvider == null) {
			db2DatabaseUnitItemProvider = new DB2DatabaseUnitItemProvider(this);
		}

		return db2DatabaseUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2DDLArtifact} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2DDLArtifactItemProvider db2DDLArtifactItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2DDLArtifact}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2DDLArtifactAdapter() {
		if (db2DDLArtifactItemProvider == null) {
			db2DDLArtifactItemProvider = new DB2DDLArtifactItemProvider(this);
		}

		return db2DDLArtifactItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.Db2DeployRoot} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected Db2DeployRootItemProvider db2DeployRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.Db2DeployRoot}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDb2DeployRootAdapter() {
		if (db2DeployRootItemProvider == null) {
			db2DeployRootItemProvider = new Db2DeployRootItemProvider(this);
		}

		return db2DeployRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2Instance} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2InstanceItemProvider db2InstanceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2Instance}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2InstanceAdapter() {
		if (db2InstanceItemProvider == null) {
			db2InstanceItemProvider = new DB2InstanceItemProvider(this);
		}

		return db2InstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2InstanceUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2InstanceUnitItemProvider db2InstanceUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2InstanceUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2InstanceUnitAdapter() {
		if (db2InstanceUnitItemProvider == null) {
			db2InstanceUnitItemProvider = new DB2InstanceUnitItemProvider(this);
		}

		return db2InstanceUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2JdbcDriver} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2JdbcDriverItemProvider db2JdbcDriverItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2JdbcDriver}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2JdbcDriverAdapter() {
		if (db2JdbcDriverItemProvider == null) {
			db2JdbcDriverItemProvider = new DB2JdbcDriverItemProvider(this);
		}

		return db2JdbcDriverItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2NodeCatalogUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2NodeCatalogUnitItemProvider db2NodeCatalogUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2NodeCatalogUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2NodeCatalogUnitAdapter() {
		if (db2NodeCatalogUnitItemProvider == null) {
			db2NodeCatalogUnitItemProvider = new DB2NodeCatalogUnitItemProvider(this);
		}

		return db2NodeCatalogUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2RuntimeClientUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DB2RuntimeClientUnitItemProvider db2RuntimeClientUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2RuntimeClientUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2RuntimeClientUnitAdapter() {
		if (db2RuntimeClientUnitItemProvider == null) {
			db2RuntimeClientUnitItemProvider = new DB2RuntimeClientUnitItemProvider(this);
		}

		return db2RuntimeClientUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2System} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected DB2SystemItemProvider db2SystemItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2System}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2SystemAdapter() {
		if (db2SystemItemProvider == null) {
			db2SystemItemProvider = new DB2SystemItemProvider(this);
		}

		return db2SystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.DB2SystemUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DB2SystemUnitItemProvider db2SystemUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.DB2SystemUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDB2SystemUnitAdapter() {
		if (db2SystemUnitItemProvider == null) {
			db2SystemUnitItemProvider = new DB2SystemUnitItemProvider(this);
		}

		return db2SystemUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.UnixDB2AdminServer} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected UnixDB2AdminServerItemProvider unixDB2AdminServerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.UnixDB2AdminServer}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createUnixDB2AdminServerAdapter() {
		if (unixDB2AdminServerItemProvider == null) {
			unixDB2AdminServerItemProvider = new UnixDB2AdminServerItemProvider(this);
		}

		return unixDB2AdminServerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.UnixDB2ClientInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnixDB2ClientInstanceItemProvider unixDB2ClientInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.UnixDB2ClientInstance}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createUnixDB2ClientInstanceAdapter() {
		if (unixDB2ClientInstanceItemProvider == null) {
			unixDB2ClientInstanceItemProvider = new UnixDB2ClientInstanceItemProvider(this);
		}

		return unixDB2ClientInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.UnixDB2Instance} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected UnixDB2InstanceItemProvider unixDB2InstanceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.UnixDB2Instance}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createUnixDB2InstanceAdapter() {
		if (unixDB2InstanceItemProvider == null) {
			unixDB2InstanceItemProvider = new UnixDB2InstanceItemProvider(this);
		}

		return unixDB2InstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.UnixDB2System} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected UnixDB2SystemItemProvider unixDB2SystemItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.UnixDB2System}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createUnixDB2SystemAdapter() {
		if (unixDB2SystemItemProvider == null) {
			unixDB2SystemItemProvider = new UnixDB2SystemItemProvider(this);
		}

		return unixDB2SystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2AdminServer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WindowsDB2AdminServerItemProvider windowsDB2AdminServerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2AdminServer}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createWindowsDB2AdminServerAdapter() {
		if (windowsDB2AdminServerItemProvider == null) {
			windowsDB2AdminServerItemProvider = new WindowsDB2AdminServerItemProvider(this);
		}

		return windowsDB2AdminServerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2ClientInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WindowsDB2ClientInstanceItemProvider windowsDB2ClientInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2ClientInstance}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWindowsDB2ClientInstanceAdapter() {
		if (windowsDB2ClientInstanceItemProvider == null) {
			windowsDB2ClientInstanceItemProvider = new WindowsDB2ClientInstanceItemProvider(this);
		}

		return windowsDB2ClientInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2Instance} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected WindowsDB2InstanceItemProvider windowsDB2InstanceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2Instance}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createWindowsDB2InstanceAdapter() {
		if (windowsDB2InstanceItemProvider == null) {
			windowsDB2InstanceItemProvider = new WindowsDB2InstanceItemProvider(this);
		}

		return windowsDB2InstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2System} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected WindowsDB2SystemItemProvider windowsDB2SystemItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.db2.WindowsDB2System}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createWindowsDB2SystemAdapter() {
		if (windowsDB2SystemItemProvider == null) {
			windowsDB2SystemItemProvider = new WindowsDB2SystemItemProvider(this);
		}

		return windowsDB2SystemItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (db2AdminClientItemProvider != null) db2AdminClientItemProvider.dispose();
		if (db2AdminClientUnitItemProvider != null) db2AdminClientUnitItemProvider.dispose();
		if (db2AdminServerItemProvider != null) db2AdminServerItemProvider.dispose();
		if (db2AdminServerUnitItemProvider != null) db2AdminServerUnitItemProvider.dispose();
		if (db2AppDevelClientItemProvider != null) db2AppDevelClientItemProvider.dispose();
		if (db2AppDevelClientUnitItemProvider != null) db2AppDevelClientUnitItemProvider.dispose();
		if (db2BaseClientUnitItemProvider != null) db2BaseClientUnitItemProvider.dispose();
		if (db2BaseInstanceItemProvider != null) db2BaseInstanceItemProvider.dispose();
		if (db2CatalogedNodeItemProvider != null) db2CatalogedNodeItemProvider.dispose();
		if (db2CatalogUnitItemProvider != null) db2CatalogUnitItemProvider.dispose();
		if (db2ClientItemProvider != null) db2ClientItemProvider.dispose();
		if (db2ClientInstanceItemProvider != null) db2ClientInstanceItemProvider.dispose();
		if (db2ClientInstanceUnitItemProvider != null) db2ClientInstanceUnitItemProvider.dispose();
		if (db2DatabaseItemProvider != null) db2DatabaseItemProvider.dispose();
		if (db2DatabaseUnitItemProvider != null) db2DatabaseUnitItemProvider.dispose();
		if (db2DDLArtifactItemProvider != null) db2DDLArtifactItemProvider.dispose();
		if (db2DeployRootItemProvider != null) db2DeployRootItemProvider.dispose();
		if (db2InstanceItemProvider != null) db2InstanceItemProvider.dispose();
		if (db2InstanceUnitItemProvider != null) db2InstanceUnitItemProvider.dispose();
		if (db2JdbcDriverItemProvider != null) db2JdbcDriverItemProvider.dispose();
		if (db2NodeCatalogUnitItemProvider != null) db2NodeCatalogUnitItemProvider.dispose();
		if (db2RuntimeClientUnitItemProvider != null) db2RuntimeClientUnitItemProvider.dispose();
		if (db2SystemItemProvider != null) db2SystemItemProvider.dispose();
		if (db2SystemUnitItemProvider != null) db2SystemUnitItemProvider.dispose();
		if (unixDB2AdminServerItemProvider != null) unixDB2AdminServerItemProvider.dispose();
		if (unixDB2ClientInstanceItemProvider != null) unixDB2ClientInstanceItemProvider.dispose();
		if (unixDB2InstanceItemProvider != null) unixDB2InstanceItemProvider.dispose();
		if (unixDB2SystemItemProvider != null) unixDB2SystemItemProvider.dispose();
		if (windowsDB2AdminServerItemProvider != null) windowsDB2AdminServerItemProvider.dispose();
		if (windowsDB2ClientInstanceItemProvider != null) windowsDB2ClientInstanceItemProvider.dispose();
		if (windowsDB2InstanceItemProvider != null) windowsDB2InstanceItemProvider.dispose();
		if (windowsDB2SystemItemProvider != null) windowsDB2SystemItemProvider.dispose();
	}

}
