/***************************************************************************************************
 * Copyright (c) 2003, 2007 IBM Corporation Licensed Material - Property of IBM. All rights
 * reserved.
 * 
 * US Government Users Restricted Rights - Use, duplication or disclosure v1.0 restricted by GSA ADP
 * Schedule Contract with IBM Corp.
 * 
 * Contributors: IBM Corporation - initial API and implementation
 **************************************************************************************************/
package com.ibm.ccl.soa.deploy.core.constraint.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.ibm.ccl.soa.deploy.core.constraint.util.ConstraintAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers. The
 * adapters generated by this factory convert EMF adapter notifications into calls to
 * {@link #fireNotifyChanged fireNotifyChanged}. The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * 
 * @generated
 */
public class ConstraintItemProviderAdapterFactory extends ConstraintAdapterFactory implements
		ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public static final String copyright = "Copyright (c) 2005, 2006 IBM Corporation. Licensed Material - Property of IBM. All rights reserved."; //$NON-NLS-1$

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by
	 * {@link #isFactoryForType isFactoryForType}. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public ConstraintItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.AndConstraint} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AndConstraintItemProvider andConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.AndConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createAndConstraintAdapter() {
		if (andConstraintItemProvider == null) {
			andConstraintItemProvider = new AndConstraintItemProvider(this);
		}

		return andConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ApplicationCommunicationConstraint} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ApplicationCommunicationConstraintItemProvider applicationCommunicationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ApplicationCommunicationConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createApplicationCommunicationConstraintAdapter() {
		if (applicationCommunicationConstraintItemProvider == null) {
			applicationCommunicationConstraintItemProvider = new ApplicationCommunicationConstraintItemProvider(
					this);
		}

		return applicationCommunicationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ApplicationCommunicationProtocolConstraint}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ApplicationCommunicationProtocolConstraintItemProvider applicationCommunicationProtocolConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ApplicationCommunicationProtocolConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createApplicationCommunicationProtocolConstraintAdapter() {
		if (applicationCommunicationProtocolConstraintItemProvider == null) {
			applicationCommunicationProtocolConstraintItemProvider = new ApplicationCommunicationProtocolConstraintItemProvider(
					this);
		}

		return applicationCommunicationProtocolConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.AttributeDefinedConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AttributeDefinedConstraintItemProvider attributeDefinedConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.AttributeDefinedConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createAttributeDefinedConstraintAdapter() {
		if (attributeDefinedConstraintItemProvider == null) {
			attributeDefinedConstraintItemProvider = new AttributeDefinedConstraintItemProvider(this);
		}

		return attributeDefinedConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.AttributePropagationConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AttributePropagationConstraintItemProvider attributePropagationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.AttributePropagationConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createAttributePropagationConstraintAdapter() {
		if (attributePropagationConstraintItemProvider == null) {
			attributePropagationConstraintItemProvider = new AttributePropagationConstraintItemProvider(
					this);
		}

		return attributePropagationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.BaseCommunicationConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BaseCommunicationConstraintItemProvider baseCommunicationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.BaseCommunicationConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createBaseCommunicationConstraintAdapter() {
		if (baseCommunicationConstraintItemProvider == null) {
			baseCommunicationConstraintItemProvider = new BaseCommunicationConstraintItemProvider(this);
		}

		return baseCommunicationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CollocationConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CollocationConstraintItemProvider collocationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CollocationConstraint}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createCollocationConstraintAdapter() {
		if (collocationConstraintItemProvider == null) {
			collocationConstraintItemProvider = new CollocationConstraintItemProvider(this);
		}

		return collocationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationBandwidthConstraint} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CommunicationBandwidthConstraintItemProvider communicationBandwidthConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationBandwidthConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createCommunicationBandwidthConstraintAdapter() {
		if (communicationBandwidthConstraintItemProvider == null) {
			communicationBandwidthConstraintItemProvider = new CommunicationBandwidthConstraintItemProvider(
					this);
		}

		return communicationBandwidthConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationCostConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CommunicationCostConstraintItemProvider communicationCostConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationCostConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createCommunicationCostConstraintAdapter() {
		if (communicationCostConstraintItemProvider == null) {
			communicationCostConstraintItemProvider = new CommunicationCostConstraintItemProvider(this);
		}

		return communicationCostConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationPortConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CommunicationPortConstraintItemProvider communicationPortConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationPortConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createCommunicationPortConstraintAdapter() {
		if (communicationPortConstraintItemProvider == null) {
			communicationPortConstraintItemProvider = new CommunicationPortConstraintItemProvider(this);
		}

		return communicationPortConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationRedundancyConstraint} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CommunicationRedundancyConstraintItemProvider communicationRedundancyConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationRedundancyConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createCommunicationRedundancyConstraintAdapter() {
		if (communicationRedundancyConstraintItemProvider == null) {
			communicationRedundancyConstraintItemProvider = new CommunicationRedundancyConstraintItemProvider(
					this);
		}

		return communicationRedundancyConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationTypeConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CommunicationTypeConstraintItemProvider communicationTypeConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.CommunicationTypeConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createCommunicationTypeConstraintAdapter() {
		if (communicationTypeConstraintItemProvider == null) {
			communicationTypeConstraintItemProvider = new CommunicationTypeConstraintItemProvider(this);
		}

		return communicationTypeConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ConstraintRoot} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ConstraintRootItemProvider constraintRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.ConstraintRoot}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createConstraintRootAdapter() {
		if (constraintRootItemProvider == null) {
			constraintRootItemProvider = new ConstraintRootItemProvider(this);
		}

		return constraintRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.DeferredHostingConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DeferredHostingConstraintItemProvider deferredHostingConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.DeferredHostingConstraint}. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDeferredHostingConstraintAdapter() {
		if (deferredHostingConstraintItemProvider == null) {
			deferredHostingConstraintItemProvider = new DeferredHostingConstraintItemProvider(this);
		}

		return deferredHostingConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.EnumerationConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EnumerationConstraintItemProvider enumerationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.EnumerationConstraint}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createEnumerationConstraintAdapter() {
		if (enumerationConstraintItemProvider == null) {
			enumerationConstraintItemProvider = new EnumerationConstraintItemProvider(this);
		}

		return enumerationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.EqualsConstraint} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EqualsConstraintItemProvider equalsConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.EqualsConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createEqualsConstraintAdapter() {
		if (equalsConstraintItemProvider == null) {
			equalsConstraintItemProvider = new EqualsConstraintItemProvider(this);
		}

		return equalsConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ExclusionConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ExclusionConstraintItemProvider exclusionConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ExclusionConstraint}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createExclusionConstraintAdapter() {
		if (exclusionConstraintItemProvider == null) {
			exclusionConstraintItemProvider = new ExclusionConstraintItemProvider(this);
		}

		return exclusionConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.GroupCardinalityConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GroupCardinalityConstraintItemProvider groupCardinalityConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.GroupCardinalityConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createGroupCardinalityConstraintAdapter() {
		if (groupCardinalityConstraintItemProvider == null) {
			groupCardinalityConstraintItemProvider = new GroupCardinalityConstraintItemProvider(this);
		}

		return groupCardinalityConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.MemberCardinalityConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MemberCardinalityConstraintItemProvider memberCardinalityConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.MemberCardinalityConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createMemberCardinalityConstraintAdapter() {
		if (memberCardinalityConstraintItemProvider == null) {
			memberCardinalityConstraintItemProvider = new MemberCardinalityConstraintItemProvider(this);
		}

		return memberCardinalityConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.NetworkCommunicationConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NetworkCommunicationConstraintItemProvider networkCommunicationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.NetworkCommunicationConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createNetworkCommunicationConstraintAdapter() {
		if (networkCommunicationConstraintItemProvider == null) {
			networkCommunicationConstraintItemProvider = new NetworkCommunicationConstraintItemProvider(
					this);
		}

		return networkCommunicationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.NotConstraint} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NotConstraintItemProvider notConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.NotConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createNotConstraintAdapter() {
		if (notConstraintItemProvider == null) {
			notConstraintItemProvider = new NotConstraintItemProvider(this);
		}

		return notConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.OrConstraint} instances. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OrConstraintItemProvider orConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.OrConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createOrConstraintAdapter() {
		if (orConstraintItemProvider == null) {
			orConstraintItemProvider = new OrConstraintItemProvider(this);
		}

		return orConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.PaletteConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PaletteConstraintItemProvider paletteConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.PaletteConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createPaletteConstraintAdapter() {
		if (paletteConstraintItemProvider == null) {
			paletteConstraintItemProvider = new PaletteConstraintItemProvider(this);
		}

		return paletteConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ProductIdentifierConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ProductIdentifierConstraintItemProvider productIdentifierConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.ProductIdentifierConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createProductIdentifierConstraintAdapter() {
		if (productIdentifierConstraintItemProvider == null) {
			productIdentifierConstraintItemProvider = new ProductIdentifierConstraintItemProvider(this);
		}

		return productIdentifierConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.RangeConstraint} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RangeConstraintItemProvider rangeConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.RangeConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createRangeConstraintAdapter() {
		if (rangeConstraintItemProvider == null) {
			rangeConstraintItemProvider = new RangeConstraintItemProvider(this);
		}

		return rangeConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.RealizationConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RealizationConstraintItemProvider realizationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.RealizationConstraint}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createRealizationConstraintAdapter() {
		if (realizationConstraintItemProvider == null) {
			realizationConstraintItemProvider = new RealizationConstraintItemProvider(this);
		}

		return realizationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.SingleValue} instances. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SingleValueItemProvider singleValueItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.SingleValue}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createSingleValueAdapter() {
		if (singleValueItemProvider == null) {
			singleValueItemProvider = new SingleValueItemProvider(this);
		}

		return singleValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.SynchronousCommunicationConstraint} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SynchronousCommunicationConstraintItemProvider synchronousCommunicationConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.SynchronousCommunicationConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createSynchronousCommunicationConstraintAdapter() {
		if (synchronousCommunicationConstraintItemProvider == null) {
			synchronousCommunicationConstraintItemProvider = new SynchronousCommunicationConstraintItemProvider(
					this);
		}

		return synchronousCommunicationConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.TransmissionDelayConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TransmissionDelayConstraintItemProvider transmissionDelayConstraintItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.TransmissionDelayConstraint}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createTransmissionDelayConstraintAdapter() {
		if (transmissionDelayConstraintItemProvider == null) {
			transmissionDelayConstraintItemProvider = new TransmissionDelayConstraintItemProvider(this);
		}

		return transmissionDelayConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.TypeConstraint} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TypeConstraintItemProvider typeConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.TypeConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createTypeConstraintAdapter() {
		if (typeConstraintItemProvider == null) {
			typeConstraintItemProvider = new TypeConstraintItemProvider(this);
		}

		return typeConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.VersionConstraint} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected VersionConstraintItemProvider versionConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.VersionConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createVersionConstraintAdapter() {
		if (versionConstraintItemProvider == null) {
			versionConstraintItemProvider = new VersionConstraintItemProvider(this);
		}

		return versionConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link com.ibm.ccl.soa.deploy.core.constraint.XorConstraint} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected XorConstraintItemProvider xorConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.constraint.XorConstraint}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createXorConstraintAdapter() {
		if (xorConstraintItemProvider == null) {
			xorConstraintItemProvider = new XorConstraintItemProvider(this);
		}

		return xorConstraintItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory. <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * 
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || ((Class) type).isInstance(adapter)) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * 
	 * @generated
	 */
	public void dispose() {
		if (andConstraintItemProvider != null) {
			andConstraintItemProvider.dispose();
		}
		if (applicationCommunicationConstraintItemProvider != null) {
			applicationCommunicationConstraintItemProvider.dispose();
		}
		if (applicationCommunicationProtocolConstraintItemProvider != null) {
			applicationCommunicationProtocolConstraintItemProvider.dispose();
		}
		if (attributeDefinedConstraintItemProvider != null) {
			attributeDefinedConstraintItemProvider.dispose();
		}
		if (attributePropagationConstraintItemProvider != null) {
			attributePropagationConstraintItemProvider.dispose();
		}
		if (baseCommunicationConstraintItemProvider != null) {
			baseCommunicationConstraintItemProvider.dispose();
		}
		if (collocationConstraintItemProvider != null) {
			collocationConstraintItemProvider.dispose();
		}
		if (communicationBandwidthConstraintItemProvider != null) {
			communicationBandwidthConstraintItemProvider.dispose();
		}
		if (communicationCostConstraintItemProvider != null) {
			communicationCostConstraintItemProvider.dispose();
		}
		if (communicationPortConstraintItemProvider != null) {
			communicationPortConstraintItemProvider.dispose();
		}
		if (communicationRedundancyConstraintItemProvider != null) {
			communicationRedundancyConstraintItemProvider.dispose();
		}
		if (communicationTypeConstraintItemProvider != null) {
			communicationTypeConstraintItemProvider.dispose();
		}
		if (constraintRootItemProvider != null) {
			constraintRootItemProvider.dispose();
		}
		if (deferredHostingConstraintItemProvider != null) {
			deferredHostingConstraintItemProvider.dispose();
		}
		if (enumerationConstraintItemProvider != null) {
			enumerationConstraintItemProvider.dispose();
		}
		if (equalsConstraintItemProvider != null) {
			equalsConstraintItemProvider.dispose();
		}
		if (exclusionConstraintItemProvider != null) {
			exclusionConstraintItemProvider.dispose();
		}
		if (groupCardinalityConstraintItemProvider != null) {
			groupCardinalityConstraintItemProvider.dispose();
		}
		if (memberCardinalityConstraintItemProvider != null) {
			memberCardinalityConstraintItemProvider.dispose();
		}
		if (networkCommunicationConstraintItemProvider != null) {
			networkCommunicationConstraintItemProvider.dispose();
		}
		if (notConstraintItemProvider != null) {
			notConstraintItemProvider.dispose();
		}
		if (orConstraintItemProvider != null) {
			orConstraintItemProvider.dispose();
		}
		if (paletteConstraintItemProvider != null) {
			paletteConstraintItemProvider.dispose();
		}
		if (productIdentifierConstraintItemProvider != null) {
			productIdentifierConstraintItemProvider.dispose();
		}
		if (rangeConstraintItemProvider != null) {
			rangeConstraintItemProvider.dispose();
		}
		if (realizationConstraintItemProvider != null) {
			realizationConstraintItemProvider.dispose();
		}
		if (singleValueItemProvider != null) {
			singleValueItemProvider.dispose();
		}
		if (synchronousCommunicationConstraintItemProvider != null) {
			synchronousCommunicationConstraintItemProvider.dispose();
		}
		if (transmissionDelayConstraintItemProvider != null) {
			transmissionDelayConstraintItemProvider.dispose();
		}
		if (typeConstraintItemProvider != null) {
			typeConstraintItemProvider.dispose();
		}
		if (versionConstraintItemProvider != null) {
			versionConstraintItemProvider.dispose();
		}
		if (xorConstraintItemProvider != null) {
			xorConstraintItemProvider.dispose();
		}
	}

}
