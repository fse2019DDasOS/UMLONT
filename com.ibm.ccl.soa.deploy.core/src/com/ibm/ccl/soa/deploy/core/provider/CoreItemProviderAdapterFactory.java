/*******************************************************************************
 * Copyright (c) 2003, 2007 IBM Corporation Licensed Material - Property of IBM. All rights reserved.
 *  
 * US Government Users Restricted Rights - Use, duplication or disclosure v1.0 restricted by GSA ADP
 * Schedule Contract with IBM Corp.
 * 
 * Contributors: IBM Corporation - initial API and implementation
 *******************************************************************************/
package com.ibm.ccl.soa.deploy.core.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.ibm.ccl.soa.deploy.core.util.CoreAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * @generated
 */
public class CoreItemProviderAdapterFactory extends CoreAdapterFactory implements
		ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public static final String copyright = "Copyright (c) 2005, 2006 IBM Corporation. Licensed Material - Property of IBM. All rights reserved."; //$NON-NLS-1$

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public CoreItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Annotation} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Annotation}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.AttributeMetaData} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected AttributeMetaDataItemProvider attributeMetaDataItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.AttributeMetaData}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createAttributeMetaDataAdapter() {
		if (attributeMetaDataItemProvider == null) {
			attributeMetaDataItemProvider = new AttributeMetaDataItemProvider(this);
		}

		return attributeMetaDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Augmentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AugmentationItemProvider augmentationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Augmentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAugmentationAdapter() {
		if (augmentationItemProvider == null) {
			augmentationItemProvider = new AugmentationItemProvider(this);
		}

		return augmentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.BaseComponentUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseComponentUnitItemProvider baseComponentUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.BaseComponentUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBaseComponentUnitAdapter() {
		if (baseComponentUnitItemProvider == null) {
			baseComponentUnitItemProvider = new BaseComponentUnitItemProvider(this);
		}

		return baseComponentUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.BundleCapability} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected BundleCapabilityItemProvider bundleCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.BundleCapability}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createBundleCapabilityAdapter() {
		if (bundleCapabilityItemProvider == null) {
			bundleCapabilityItemProvider = new BundleCapabilityItemProvider(this);
		}

		return bundleCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Capability} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected CapabilityItemProvider capabilityItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Capability}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createCapabilityAdapter() {
		if (capabilityItemProvider == null) {
			capabilityItemProvider = new CapabilityItemProvider(this);
		}

		return capabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.CommunicationCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationCapabilityItemProvider communicationCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.CommunicationCapability}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCommunicationCapabilityAdapter() {
		if (communicationCapabilityItemProvider == null) {
			communicationCapabilityItemProvider = new CommunicationCapabilityItemProvider(this);
		}

		return communicationCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.ConceptualNode} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected ConceptualNodeItemProvider conceptualNodeItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.ConceptualNode}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createConceptualNodeAdapter() {
		if (conceptualNodeItemProvider == null) {
			conceptualNodeItemProvider = new ConceptualNodeItemProvider(this);
		}

		return conceptualNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.ConstraintLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintLinkItemProvider constraintLinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.ConstraintLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConstraintLinkAdapter() {
		if (constraintLinkItemProvider == null) {
			constraintLinkItemProvider = new ConstraintLinkItemProvider(this);
		}

		return constraintLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.DependencyLink} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DependencyLinkItemProvider dependencyLinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.DependencyLink}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDependencyLinkAdapter() {
		if (dependencyLinkItemProvider == null) {
			dependencyLinkItemProvider = new DependencyLinkItemProvider(this);
		}

		return dependencyLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.DeployCoreRoot} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DeployCoreRootItemProvider deployCoreRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.DeployCoreRoot}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDeployCoreRootAdapter() {
		if (deployCoreRootItemProvider == null) {
			deployCoreRootItemProvider = new DeployCoreRootItemProvider(this);
		}

		return deployCoreRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.DeployLink} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected DeployLinkItemProvider deployLinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.DeployLink}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDeployLinkAdapter() {
		if (deployLinkItemProvider == null) {
			deployLinkItemProvider = new DeployLinkItemProvider(this);
		}

		return deployLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.DeployModelObjectSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeployModelObjectSetItemProvider deployModelObjectSetItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.DeployModelObjectSet}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createDeployModelObjectSetAdapter() {
		if (deployModelObjectSetItemProvider == null) {
			deployModelObjectSetItemProvider = new DeployModelObjectSetItemProvider(this);
		}

		return deployModelObjectSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.ExplicitContract} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected ExplicitContractItemProvider explicitContractItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.ExplicitContract}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createExplicitContractAdapter() {
		if (explicitContractItemProvider == null) {
			explicitContractItemProvider = new ExplicitContractItemProvider(this);
		}

		return explicitContractItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Exported} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ExportedItemProvider exportedItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Exported}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createExportedAdapter() {
		if (exportedItemProvider == null) {
			exportedItemProvider = new ExportedItemProvider(this);
		}

		return exportedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.ExportedUnit} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected ExportedUnitItemProvider exportedUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.ExportedUnit}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createExportedUnitAdapter() {
		if (exportedUnitItemProvider == null) {
			exportedUnitItemProvider = new ExportedUnitItemProvider(this);
		}

		return exportedUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.ExtendedAttribute} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected ExtendedAttributeItemProvider extendedAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.ExtendedAttribute}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createExtendedAttributeAdapter() {
		if (extendedAttributeItemProvider == null) {
			extendedAttributeItemProvider = new ExtendedAttributeItemProvider(this);
		}

		return extendedAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.FileArtifact} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected FileArtifactItemProvider fileArtifactItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.FileArtifact}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createFileArtifactAdapter() {
		if (fileArtifactItemProvider == null) {
			fileArtifactItemProvider = new FileArtifactItemProvider(this);
		}

		return fileArtifactItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.HostingLink} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected HostingLinkItemProvider hostingLinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.HostingLink}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createHostingLinkAdapter() {
		if (hostingLinkItemProvider == null) {
			hostingLinkItemProvider = new HostingLinkItemProvider(this);
		}

		return hostingLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Import} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Import}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.InstanceConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceConfigurationItemProvider instanceConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.InstanceConfiguration}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createInstanceConfigurationAdapter() {
		if (instanceConfigurationItemProvider == null) {
			instanceConfigurationItemProvider = new InstanceConfigurationItemProvider(this);
		}

		return instanceConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Instantiation} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected InstantiationItemProvider instantiationItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Instantiation}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createInstantiationAdapter() {
		if (instantiationItemProvider == null) {
			instantiationItemProvider = new InstantiationItemProvider(this);
		}

		return instantiationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.MemberLink} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected MemberLinkItemProvider memberLinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.MemberLink}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createMemberLinkAdapter() {
		if (memberLinkItemProvider == null) {
			memberLinkItemProvider = new MemberLinkItemProvider(this);
		}

		return memberLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Property} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Property}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.RealizationLink} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected RealizationLinkItemProvider realizationLinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.RealizationLink}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createRealizationLinkAdapter() {
		if (realizationLinkItemProvider == null) {
			realizationLinkItemProvider = new RealizationLinkItemProvider(this);
		}

		return realizationLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Reference} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceItemProvider referenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Reference}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createReferenceAdapter() {
		if (referenceItemProvider == null) {
			referenceItemProvider = new ReferenceItemProvider(this);
		}

		return referenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Requirement} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected RequirementItemProvider requirementItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Requirement}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createRequirementAdapter() {
		if (requirementItemProvider == null) {
			requirementItemProvider = new RequirementItemProvider(this);
		}

		return requirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.RequirementExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementExpressionItemProvider requirementExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.RequirementExpression}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createRequirementExpressionAdapter() {
		if (requirementExpressionItemProvider == null) {
			requirementExpressionItemProvider = new RequirementExpressionItemProvider(this);
		}

		return requirementExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Service} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceItemProvider serviceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Service}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createServiceAdapter() {
		if (serviceItemProvider == null) {
			serviceItemProvider = new ServiceItemProvider(this);
		}

		return serviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.SoftwareComponent} instances.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	protected SoftwareComponentItemProvider softwareComponentItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.SoftwareComponent}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createSoftwareComponentAdapter() {
		if (softwareComponentItemProvider == null) {
			softwareComponentItemProvider = new SoftwareComponentItemProvider(this);
		}

		return softwareComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Stereotype} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StereotypeItemProvider stereotypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Stereotype}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createStereotypeAdapter() {
		if (stereotypeItemProvider == null) {
			stereotypeItemProvider = new StereotypeItemProvider(this);
		}

		return stereotypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link java.util.Map.Entry} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected StringToStringEntryItemProvider stringToStringEntryItemProvider;

	/**
	 * This creates an adapter for a {@link java.util.Map.Entry}.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	public Adapter createStringToStringEntryAdapter() {
		if (stringToStringEntryItemProvider == null) {
			stringToStringEntryItemProvider = new StringToStringEntryItemProvider(this);
		}

		return stringToStringEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Topology} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected TopologyItemProvider topologyItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Topology}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createTopologyAdapter() {
		if (topologyItemProvider == null) {
			topologyItemProvider = new TopologyItemProvider(this);
		}

		return topologyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.Unit} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitItemProvider unitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.Unit}.
	 * <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createUnitAdapter() {
		if (unitItemProvider == null) {
			unitItemProvider = new UnitItemProvider(this);
		}

		return unitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.core.UnitLink} instances.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitLinkItemProvider unitLinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.core.UnitLink}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter createUnitLinkAdapter() {
		if (unitLinkItemProvider == null) {
			unitLinkItemProvider = new UnitLinkItemProvider(this);
		}

		return unitLinkItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (annotationItemProvider != null) annotationItemProvider.dispose();
		if (attributeMetaDataItemProvider != null) attributeMetaDataItemProvider.dispose();
		if (augmentationItemProvider != null) augmentationItemProvider.dispose();
		if (baseComponentUnitItemProvider != null) baseComponentUnitItemProvider.dispose();
		if (bundleCapabilityItemProvider != null) bundleCapabilityItemProvider.dispose();
		if (capabilityItemProvider != null) capabilityItemProvider.dispose();
		if (communicationCapabilityItemProvider != null) communicationCapabilityItemProvider.dispose();
		if (conceptualNodeItemProvider != null) conceptualNodeItemProvider.dispose();
		if (constraintLinkItemProvider != null) constraintLinkItemProvider.dispose();
		if (dependencyLinkItemProvider != null) dependencyLinkItemProvider.dispose();
		if (deployCoreRootItemProvider != null) deployCoreRootItemProvider.dispose();
		if (deployLinkItemProvider != null) deployLinkItemProvider.dispose();
		if (deployModelObjectSetItemProvider != null) deployModelObjectSetItemProvider.dispose();
		if (explicitContractItemProvider != null) explicitContractItemProvider.dispose();
		if (exportedItemProvider != null) exportedItemProvider.dispose();
		if (exportedUnitItemProvider != null) exportedUnitItemProvider.dispose();
		if (extendedAttributeItemProvider != null) extendedAttributeItemProvider.dispose();
		if (fileArtifactItemProvider != null) fileArtifactItemProvider.dispose();
		if (hostingLinkItemProvider != null) hostingLinkItemProvider.dispose();
		if (importItemProvider != null) importItemProvider.dispose();
		if (instanceConfigurationItemProvider != null) instanceConfigurationItemProvider.dispose();
		if (instantiationItemProvider != null) instantiationItemProvider.dispose();
		if (memberLinkItemProvider != null) memberLinkItemProvider.dispose();
		if (propertyItemProvider != null) propertyItemProvider.dispose();
		if (realizationLinkItemProvider != null) realizationLinkItemProvider.dispose();
		if (referenceItemProvider != null) referenceItemProvider.dispose();
		if (requirementItemProvider != null) requirementItemProvider.dispose();
		if (requirementExpressionItemProvider != null) requirementExpressionItemProvider.dispose();
		if (serviceItemProvider != null) serviceItemProvider.dispose();
		if (softwareComponentItemProvider != null) softwareComponentItemProvider.dispose();
		if (stereotypeItemProvider != null) stereotypeItemProvider.dispose();
		if (stringToStringEntryItemProvider != null) stringToStringEntryItemProvider.dispose();
		if (topologyItemProvider != null) topologyItemProvider.dispose();
		if (unitItemProvider != null) unitItemProvider.dispose();
		if (unitLinkItemProvider != null) unitLinkItemProvider.dispose();
	}

}
