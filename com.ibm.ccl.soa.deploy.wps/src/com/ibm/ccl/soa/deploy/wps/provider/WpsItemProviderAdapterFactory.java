/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package com.ibm.ccl.soa.deploy.wps.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.ibm.ccl.soa.deploy.wps.util.WpsAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class WpsItemProviderAdapterFactory extends WpsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WpsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.ApplicationSchedular} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationSchedularItemProvider applicationSchedularItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.ApplicationSchedular}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createApplicationSchedularAdapter() {
		if (applicationSchedularItemProvider == null) {
			applicationSchedularItemProvider = new ApplicationSchedularItemProvider(this);
		}

		return applicationSchedularItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.BPEContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPEContainerItemProvider bpeContainerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.BPEContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBPEContainerAdapter() {
		if (bpeContainerItemProvider == null) {
			bpeContainerItemProvider = new BPEContainerItemProvider(this);
		}

		return bpeContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.BPEContainerUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPEContainerUnitItemProvider bpeContainerUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.BPEContainerUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBPEContainerUnitAdapter() {
		if (bpeContainerUnitItemProvider == null) {
			bpeContainerUnitItemProvider = new BPEContainerUnitItemProvider(this);
		}

		return bpeContainerUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.BusinessRulesManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessRulesManagerItemProvider businessRulesManagerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.BusinessRulesManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBusinessRulesManagerAdapter() {
		if (businessRulesManagerItemProvider == null) {
			businessRulesManagerItemProvider = new BusinessRulesManagerItemProvider(this);
		}

		return businessRulesManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.BusinessRulesManagerUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessRulesManagerUnitItemProvider businessRulesManagerUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.BusinessRulesManagerUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBusinessRulesManagerUnitAdapter() {
		if (businessRulesManagerUnitItemProvider == null) {
			businessRulesManagerUnitItemProvider = new BusinessRulesManagerUnitItemProvider(this);
		}

		return businessRulesManagerUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.CommonEventInfrastructure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommonEventInfrastructureItemProvider commonEventInfrastructureItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.CommonEventInfrastructure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCommonEventInfrastructureAdapter() {
		if (commonEventInfrastructureItemProvider == null) {
			commonEventInfrastructureItemProvider = new CommonEventInfrastructureItemProvider(this);
		}

		return commonEventInfrastructureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.ExtendedMessagingService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendedMessagingServiceItemProvider extendedMessagingServiceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.ExtendedMessagingService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createExtendedMessagingServiceAdapter() {
		if (extendedMessagingServiceItemProvider == null) {
			extendedMessagingServiceItemProvider = new ExtendedMessagingServiceItemProvider(this);
		}

		return extendedMessagingServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.ManagingEventservice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManagingEventserviceItemProvider managingEventserviceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.ManagingEventservice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createManagingEventserviceAdapter() {
		if (managingEventserviceItemProvider == null) {
			managingEventserviceItemProvider = new ManagingEventserviceItemProvider(this);
		}

		return managingEventserviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.SCARuntime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SCARuntimeItemProvider scaRuntimeItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.SCARuntime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSCARuntimeAdapter() {
		if (scaRuntimeItemProvider == null) {
			scaRuntimeItemProvider = new SCARuntimeItemProvider(this);
		}

		return scaRuntimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.SDORuntime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SDORuntimeItemProvider sdoRuntimeItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.SDORuntime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSDORuntimeAdapter() {
		if (sdoRuntimeItemProvider == null) {
			sdoRuntimeItemProvider = new SDORuntimeItemProvider(this);
		}

		return sdoRuntimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.TaskContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskContainerItemProvider taskContainerItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.TaskContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTaskContainerAdapter() {
		if (taskContainerItemProvider == null) {
			taskContainerItemProvider = new TaskContainerItemProvider(this);
		}

		return taskContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.TaskContainerUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskContainerUnitItemProvider taskContainerUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.TaskContainerUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTaskContainerUnitAdapter() {
		if (taskContainerUnitItemProvider == null) {
			taskContainerUnitItemProvider = new TaskContainerUnitItemProvider(this);
		}

		return taskContainerUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WebSphereBusinessIntegrationAdaptersService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WebSphereBusinessIntegrationAdaptersServiceItemProvider webSphereBusinessIntegrationAdaptersServiceItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WebSphereBusinessIntegrationAdaptersService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWebSphereBusinessIntegrationAdaptersServiceAdapter() {
		if (webSphereBusinessIntegrationAdaptersServiceItemProvider == null) {
			webSphereBusinessIntegrationAdaptersServiceItemProvider = new WebSphereBusinessIntegrationAdaptersServiceItemProvider(this);
		}

		return webSphereBusinessIntegrationAdaptersServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WpsBaseSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WpsBaseSystemItemProvider wpsBaseSystemItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WpsBaseSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWpsBaseSystemAdapter() {
		if (wpsBaseSystemItemProvider == null) {
			wpsBaseSystemItemProvider = new WpsBaseSystemItemProvider(this);
		}

		return wpsBaseSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WpsBaseSystemUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WpsBaseSystemUnitItemProvider wpsBaseSystemUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WpsBaseSystemUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWpsBaseSystemUnitAdapter() {
		if (wpsBaseSystemUnitItemProvider == null) {
			wpsBaseSystemUnitItemProvider = new WpsBaseSystemUnitItemProvider(this);
		}

		return wpsBaseSystemUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WPSCommonEventInfrastructureUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WPSCommonEventInfrastructureUnitItemProvider wpsCommonEventInfrastructureUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WPSCommonEventInfrastructureUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWPSCommonEventInfrastructureUnitAdapter() {
		if (wpsCommonEventInfrastructureUnitItemProvider == null) {
			wpsCommonEventInfrastructureUnitItemProvider = new WPSCommonEventInfrastructureUnitItemProvider(this);
		}

		return wpsCommonEventInfrastructureUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WPSESB} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WPSESBItemProvider wpsesbItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WPSESB}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWPSESBAdapter() {
		if (wpsesbItemProvider == null) {
			wpsesbItemProvider = new WPSESBItemProvider(this);
		}

		return wpsesbItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WPSESBUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WPSESBUnitItemProvider wpsesbUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WPSESBUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWPSESBUnitAdapter() {
		if (wpsesbUnitItemProvider == null) {
			wpsesbUnitItemProvider = new WPSESBUnitItemProvider(this);
		}

		return wpsesbUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WPSRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WPSRootItemProvider wpsRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WPSRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWPSRootAdapter() {
		if (wpsRootItemProvider == null) {
			wpsRootItemProvider = new WPSRootItemProvider(this);
		}

		return wpsRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WPSSIB} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WPSSIBItemProvider wpssibItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WPSSIB}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWPSSIBAdapter() {
		if (wpssibItemProvider == null) {
			wpssibItemProvider = new WPSSIBItemProvider(this);
		}

		return wpssibItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WPSSIBUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WPSSIBUnitItemProvider wpssibUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WPSSIBUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWPSSIBUnitAdapter() {
		if (wpssibUnitItemProvider == null) {
			wpssibUnitItemProvider = new WPSSIBUnitItemProvider(this);
		}

		return wpssibUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.ibm.ccl.soa.deploy.wps.WpsSystemUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WpsSystemUnitItemProvider wpsSystemUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.ibm.ccl.soa.deploy.wps.WpsSystemUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWpsSystemUnitAdapter() {
		if (wpsSystemUnitItemProvider == null) {
			wpsSystemUnitItemProvider = new WpsSystemUnitItemProvider(this);
		}

		return wpsSystemUnitItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (applicationSchedularItemProvider != null) applicationSchedularItemProvider.dispose();
		if (bpeContainerItemProvider != null) bpeContainerItemProvider.dispose();
		if (bpeContainerUnitItemProvider != null) bpeContainerUnitItemProvider.dispose();
		if (businessRulesManagerItemProvider != null) businessRulesManagerItemProvider.dispose();
		if (businessRulesManagerUnitItemProvider != null) businessRulesManagerUnitItemProvider.dispose();
		if (commonEventInfrastructureItemProvider != null) commonEventInfrastructureItemProvider.dispose();
		if (extendedMessagingServiceItemProvider != null) extendedMessagingServiceItemProvider.dispose();
		if (managingEventserviceItemProvider != null) managingEventserviceItemProvider.dispose();
		if (scaRuntimeItemProvider != null) scaRuntimeItemProvider.dispose();
		if (sdoRuntimeItemProvider != null) sdoRuntimeItemProvider.dispose();
		if (taskContainerItemProvider != null) taskContainerItemProvider.dispose();
		if (taskContainerUnitItemProvider != null) taskContainerUnitItemProvider.dispose();
		if (webSphereBusinessIntegrationAdaptersServiceItemProvider != null) webSphereBusinessIntegrationAdaptersServiceItemProvider.dispose();
		if (wpsBaseSystemItemProvider != null) wpsBaseSystemItemProvider.dispose();
		if (wpsBaseSystemUnitItemProvider != null) wpsBaseSystemUnitItemProvider.dispose();
		if (wpsCommonEventInfrastructureUnitItemProvider != null) wpsCommonEventInfrastructureUnitItemProvider.dispose();
		if (wpsesbItemProvider != null) wpsesbItemProvider.dispose();
		if (wpsesbUnitItemProvider != null) wpsesbUnitItemProvider.dispose();
		if (wpsRootItemProvider != null) wpsRootItemProvider.dispose();
		if (wpssibItemProvider != null) wpssibItemProvider.dispose();
		if (wpssibUnitItemProvider != null) wpssibUnitItemProvider.dispose();
		if (wpsSystemUnitItemProvider != null) wpsSystemUnitItemProvider.dispose();
	}

}
